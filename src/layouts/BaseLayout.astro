---
import { ClientRouter } from 'astro:transitions';
import "../styles/global.css";
import Header from "@/components/layout/Header.astro";
import Footer from "@/components/layout/Footer.astro";
import GoogleAnalytics from "@/components/page/GoogleAnalytics.astro";

interface Props {
	title?: string;
	description?: string;
	pagefind: boolean;
	header?: boolean;
	footer?: boolean;
	og: {
		enabled: boolean;
		image?: URL;
		width?: number;
		height?: number;
	};
	type: "article" | "website";
}

const meta: Props = Astro.props;
---

<!doctype html>
<html lang="ja">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/png" href="/favicon/favicon-96x96.png" sizes="96x96" />
		<link rel="icon" type="image/svg+xml" href="/favicon/favicon.svg" />
		<link rel="shortcut icon" href="/favicon/favicon.ico" />
		<link rel="apple-touch-icon" sizes="180x180" href="/favicon/apple-touch-icon.png" />
		<meta name="apple-mobile-web-app-title" content="Me" />
		<link rel="manifest" href="/favicon/site.webmanifest" />
		<link rel="sitemap" href="/sitemap-index.xml" />
		<meta name="generator" content={Astro.generator} />
		{meta.title ? <title>{meta.title}</title> : <title>Ogata Katsuya's Portfolio</title>}
		{meta.description ? <meta name="description" content={meta.description} /> : <meta name="description" content="Ogata Katsuya's Portfolio" />}
		<meta name="pagefind-meta" content={meta.pagefind ? "true" : "false"} /> 
		<meta property="og:type" content={meta.type ?? "website"} />
		{
			meta.og.enabled && (
				<>
				<meta
					property="og:image"
					content={meta.og.image ?? new URL("/og-image.png", Astro.url)}
					data-pagefind-meta={meta.pagefind ? "image[content]" : null}
				/>	
				<meta property="og:image:width" content={`${meta.og.width ?? 720}`} />
				<meta property="og:image:height" content={`${meta.og.height ?? 720}`} />
				<meta
					name="twitter:card"
					content={meta.type === "article" ? "summary_large_image" : "summary"}
				/>
				</>
			)
		}
    <script is:inline>
      if (typeof window.localStorage.getItem('theme') === 'string') {
        const currentTheme = window.localStorage.getItem('theme');
        if (currentTheme === 'dark') {
          document.documentElement.classList.add('dark');
        }
      }
      if (
        typeof window.localStorage.getItem('theme') !== 'string' &&
        window.matchMedia('(prefers-color-scheme: dark)').matches
      ) {
        document.documentElement.classList.add('dark');
      }
    </script>
		<GoogleAnalytics />
		<ClientRouter />
	</head>
	<body class="bg-gradient-to-r from-blue-500 to-indigo-600 dark:from-gray-900 dark:to-gray-800">
		<Header />
		<slot />
		<Footer />
	</body>
</html>

