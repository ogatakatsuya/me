---
import { Icon } from "astro-icon/components";
import ThemeIcon from "../page/ThemeIcon.astro";

const navLinks = [
	{ href: "/", label: "Home" },
	{ href: "/about", label: "About" },
	{ href: "/blog", label: "Blog" },
	{ href: "/talk", label: "Talk" },
	{ href: "/contact", label: "Contact" },
];
---

<header class="fixed w-full top-8 z-50 flex justify-center pointer-events-none">
  <div class="hidden md:block bg-slate-200 dark:bg-gray-900/80 border-2 border-gray-400 dark:border-yellow-100 rounded-xl shadow-md px-2 py-4 w-[95vw] max-w-3xl pointer-events-auto transition-colors duration-300">
    <nav class="relative flex items-center justify-center">
      <div class="flex gap-6 justify-left pl-8 md:justify-center w-full">
        {navLinks.map(link => (
          <a
            href={link.href}
            class="font-bold text-center hover:underline hover:text-blue-500 dark:hover:text-yellow-300 active:scale-95 transition-transform duration-100"
          >
            {link.label}
          </a>
        ))}
      </div>
      <div class="absolute right-2 top-1/2 -translate-y-1/2">
        <ThemeIcon />
      </div>
    </nav>
  </div>

  <div class="md:hidden fixed top-8 right-4 pointer-events-auto">
    <div class="bg-slate-200 dark:bg-slate-800 rounded-full p-3 shadow-md border border-slate-300 dark:border-slate-600">
      <Icon name="ri:align-justify" class="text-2xl text-gray-700 dark:text-gray-300 cursor-pointer" id="mobile-menu-button" />
    </div>
  </div>

  <!-- Mobile Drawer -->
  <div id="mobile-drawer" class="md:hidden fixed inset-y-0 right-0 w-64 bg-slate-200 dark:bg-slate-800 shadow-xl transform translate-x-full transition-transform duration-300 ease-in-out z-40 pointer-events-auto">
    <div class="flex flex-col h-full">
      <!-- Header -->
      <div class="flex justify-between items-center p-6 border-b border-slate-300 dark:border-slate-600">
        <h2 class="text-lg font-semibold text-gray-800 dark:text-gray-200">Menu</h2>
        <button id="close-drawer" class="text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200">
          <Icon name="ri:close-line" class="text-2xl" />
        </button>
      </div>
      
      <!-- Navigation Links -->
      <nav class="flex-1 p-6">
        <ul class="space-y-4">
          {navLinks.map(link => (
            <li>
              <a
                href={link.href}
                class="block text-lg font-medium text-gray-700 dark:text-gray-300 hover:text-blue-500 dark:hover:text-yellow-300 py-2 transition-colors duration-200"
              >
                {link.label}
              </a>
            </li>
          ))}
        </ul>
      </nav>
      
      <!-- Theme Toggle -->
      <div class="p-6 border-t border-slate-300 dark:border-slate-600">
        <ThemeIcon />
      </div>
    </div>
  </div>

  <!-- Overlay -->
  <div id="drawer-overlay" class="md:hidden fixed inset-0 bg-black invisible transition-all duration-300 ease-in-out z-30 pointer-events-none"/>
</header>

<script is:inline>
  function initMobileMenu() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const closeDrawerButton = document.getElementById('close-drawer');
    const drawer = document.getElementById('mobile-drawer');
    const overlay = document.getElementById('drawer-overlay');

    if (!mobileMenuButton || !closeDrawerButton || !drawer || !overlay) return;

    function openDrawer() {
      drawer.classList.remove('translate-x-full');
      overlay.classList.remove('opacity-0', 'invisible');
      overlay.classList.add('pointer-events-auto');
      document.body.style.overflow = 'hidden';
    }

    function closeDrawer() {
      drawer.classList.add('translate-x-full');
      overlay.classList.add('opacity-0', 'invisible');
      overlay.classList.remove('pointer-events-auto');
      document.body.style.overflow = '';
    }

    // Clear any existing event listeners
    const newMobileMenuButton = mobileMenuButton.cloneNode(true);
    const newCloseDrawerButton = closeDrawerButton.cloneNode(true);
    
    mobileMenuButton.parentNode?.replaceChild(newMobileMenuButton, mobileMenuButton);
    closeDrawerButton.parentNode?.replaceChild(newCloseDrawerButton, closeDrawerButton);

    // Add event listeners
    newMobileMenuButton.addEventListener('click', openDrawer);
    newCloseDrawerButton.addEventListener('click', closeDrawer);
    
    // Add overlay click event to close drawer
    overlay.addEventListener('click', closeDrawer);

    // Add theme toggle functionality for drawer
    const drawerThemeToggle = document.getElementById('drawerThemeToggle');
    if (drawerThemeToggle) {
      drawerThemeToggle.addEventListener('click', () => {
        const element = document.documentElement;
        element.classList.toggle('dark');
        const isDark = element.classList.contains('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      });
    }

    // Close drawer when clicking on navigation links
    const navLinks = drawer.querySelectorAll('a[href]');
    navLinks.forEach(link => {
      link.addEventListener('click', closeDrawer);
    });
  }

  // Initialize on DOM content loaded
  document.addEventListener('DOMContentLoaded', initMobileMenu);
  
  // Reinitialize after page transitions (for Astro view transitions)
  document.addEventListener('astro:page-load', initMobileMenu);
</script>
