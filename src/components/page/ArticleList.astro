---
import type { CollectionEntry } from "astro:content";
import type { Page } from "astro";
import { Image } from "astro:assets";

import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { getSpeakerDeckThumbnailFromId } from "@/lib/speakerDeck";

interface Props {
	page: Page<CollectionEntry<"blog" | "talk">>;
}
const { page } = Astro.props;

// Get SpeakerDeck thumbnails for talk items
const postsWithThumbnails = await Promise.all(
  page.data.map(async (post) => {
    if (post.collection === "talk" && post.data.speakerDeckId) {
      const thumbnailUrl = await getSpeakerDeckThumbnailFromId(post.data.speakerDeckId);
      return { ...post, thumbnailUrl };
    }
    return { ...post, thumbnailUrl: null };
  })
);
---

<article class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 w-full max-w-5xl justify-items-center">
  {postsWithThumbnails.map((post) => (
    <a 
      href={`/${post.collection}/${post.id}`} 
      class="w-full max-w-xs block transform transition-all duration-300 hover:scale-102 hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded-xl"
    >
      <Card className="w-full flex flex-col h-full min-h-[200px] p-2 shadow-md bg-gradient-to-b from-slate-200 to-slate-300/50 dark:to-slate-700/50 dark:from-slate-800 transition-all duration-300 hover:shadow-xl">
        <CardHeader className="p-0">
          {post.collection === "blog" && (
            <Image
              src={`https://storage.r2.ogatakatsuya.com/${post.data.title}.png`}
              alt={post.data.title}
              width="1200"
              height="630"
              class="w-full object-cover rounded-sm"
              loading="lazy"
            />
          )}
          {post.collection === "talk" && post.thumbnailUrl && (
            <Image
              src={post.thumbnailUrl}
              alt={post.data.title}
              width="1200"
              height="630"
              class="w-full object-cover rounded-sm"
              loading="lazy"
            />
          )}
          <CardTitle className="p-4 leading-relaxed">
            <span class="font-medium break-words leading-relaxed text-gray-900 dark:text-gray-100">
              {post.data.title}
            </span>
          </CardTitle>
        </CardHeader>
        <CardContent className="pb-2 px-4 mt-auto">
          <div class="text-sm text-gray-500 mb-2">
            {new Intl.DateTimeFormat('jp-JP', {
              month: 'short',
              day: 'numeric',
              year: 'numeric'
            }).format(post.data.createdAt)}
          </div>
          <div class="flex flex-wrap gap-2">
            {post.data.tags?.map((tag: string) => (
              <span class="bg-blue-100 text-blue-700 dark:bg-gray-600 dark:text-gray-100 rounded px-2 py-0.5 text-xs">{tag}</span>
            ))}
          </div>
        </CardContent>
      </Card>
    </a>
  ))}
</article>