---
---

<div class="relative group/ThemeIcon">
  <button id="themeToggle" class="absolute inset-0 rounded-full overflow-hidden" transition:persist aria-label="外観を切り替える">
    <div class="group-[.has-text]/ThemeIcon:!hidden w-full h-full dark:hidden" data-tooltip-id="global-tooltip" data-tooltip-content="ページを暗くする"></div>
    <div class="group-[.has-text]/ThemeIcon:!hidden w-full h-full hidden dark:block" data-tooltip-id="global-tooltip" data-tooltip-content="ページを明るくする"></div>
  </button>
  <button class="hidden dark:block text-2xl">🌞</button>
  <button class="dark:hidden text-2xl">🌝</button>
</div>

<script is:inline>
  function setDarkMode(document) {
    const theme = (() => {
      if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
        return "light";
    })();

    if (theme === "light") {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
    }

    localStorage.setItem("theme", theme);
  }

  setDarkMode(document);

  document.addEventListener("astro:before-swap", event => {
    setDarkMode(event.newDocument);
  });

  const handleThemeToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  };

  document.getElementById("themeToggle").addEventListener("click", handleThemeToggleClick);

  if ('ontouchstart' in window || navigator.maxTouchPoints) {
    document.getElementById("themeToggle").querySelectorAll("div").forEach(div => {
      div.style.display = "none";
    });
  }
</script>