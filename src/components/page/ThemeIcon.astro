---
import { Icon } from "astro-icon/components";
---

<button
  id="themeToggle"
  class="rounded-full overflow-hidden w-10 h-10 flex items-center justify-center transition-colors hover:bg-gray-300 dark:hover:bg-gray-800"
  aria-label="外観を切り替える"
>
  <span class="block dark:hidden">
    <Icon name="ri:moon-line" class="w-6 h-6" />
  </span>
  <span class="hidden dark:block">
    <Icon name="ri:sun-line" class="w-6 h-6" />
  </span>
</button>

<script is:inline>
  function setDarkMode(document) {
    const theme = (() => {
      if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();

    if (theme === "light") {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
    }

    localStorage.setItem("theme", theme);
  }

  setDarkMode(document);

  document.addEventListener("astro:before-swap", event => {
    setDarkMode(event.newDocument);
  });

  function addThemeToggleListener() {
    const btn = document.getElementById("themeToggle");
    if (!btn) return;
    if (btn.dataset.listenerAttached) return;
    btn.addEventListener("click", () => {
      const element = document.documentElement;
      element.classList.toggle("dark");
      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    btn.dataset.listenerAttached = "true";
  }

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", addThemeToggleListener);
  } else {
    addThemeToggleListener();
  }
  document.addEventListener("astro:page-load", addThemeToggleListener);
</script>
