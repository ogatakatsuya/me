---
import Layout from "@/layouts/BaseLayout.astro";
import Title from "@/components/page/Title.astro";
import { Icon } from "astro-icon/components";

// SSRでPOSTリクエストを処理
if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const name = formData.get("name")?.toString();
    const email = formData.get("email")?.toString();
    const subject = formData.get("subject")?.toString();
    const message = formData.get("message")?.toString();

    // Validation
    if (!name || !email || !subject || !message) {
      return new Response("Please fill in all fields", { status: 400 });
    }

    // Email format validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return new Response("Please enter a valid email address", { status: 400 });
    }

    // Here you would implement actual email sending or database storage
    // Example: email service or database storage
    console.log("Contact form submitted:", { name, email, subject, message });

    // Success response
    return new Response("Thank you for your message. I'll get back to you soon!", { status: 200 });
  } catch (error) {
    console.error("Form submission error:", error);
    return new Response("An error occurred while sending", { status: 500 });
  }
}
---

<Layout
  title="Contact | Ogata Katsuya's Portfolio"
  description="Contact page - Get in touch with Ogata Katsuya"
  pagefind={true}
  og={{
    enabled: true,
    image: new URL("/og-image.png", Astro.url),
  }}
  type="website"
>
  <Title title="Contact" />

  <div class="text-center mb-8">
    <p class="text-gray-600 dark:text-gray-300">
      I'd love to hear from you! <br>
      Whether you have a project in mind, job opportunities,<br/>
      or just want to chat, feel free to reach out using the form below.
    </p>
  </div>
  
  <main class="flex-1 flex justify-center items-center px-6 pb-16">
    <div class="w-full max-w-2xl">
      <!-- お問い合わせフォーム -->
      <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg px-16 py-8 border border-gray-200 dark:border-gray-700">

        <form method="POST" class="space-y-6" id="contact-form">
          <!-- Name -->
          <div>
            <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Name <span class="text-red-500">*</span>
            </label>
            <input
              type="text"
              id="name"
              name="name"
              required
              class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:focus:ring-yellow-400 focus:border-transparent dark:bg-gray-700 dark:text-white transition-colors duration-200"
              placeholder="John Doe"
            />
          </div>

          <!-- Email Address -->
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Email Address <span class="text-red-500">*</span>
            </label>
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:focus:ring-yellow-400 focus:border-transparent dark:bg-gray-700 dark:text-white transition-colors duration-200"
              placeholder="example@email.com"
            />
          </div>

          <!-- Subject -->
          <div>
            <label for="subject" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Subject <span class="text-red-500">*</span>
            </label>
            <input
              type="text"
              id="subject"
              name="subject"
              required
              class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:focus:ring-yellow-400 focus:border-transparent dark:bg-gray-700 dark:text-white transition-colors duration-200"
              placeholder="Subject of your inquiry"
            />
          </div>

          <!-- Message -->
          <div>
            <label for="message" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Message <span class="text-red-500">*</span>
            </label>
            <textarea
              id="message"
              name="message"
              rows="6"
              required
              class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:focus:ring-yellow-400 focus:border-transparent dark:bg-gray-700 dark:text-white transition-colors duration-200 resize-none"
              placeholder="Tell me about your project or inquiry..."
            ></textarea>
          </div>

          <!-- Submit Button -->
          <div class="text-center">
            <button 
              type="submit" 
              class="w-full bg-blue-600 hover:bg-blue-700 dark:bg-yellow-500 dark:hover:bg-yellow-600 text-white dark:text-gray-900 font-semibold py-3 px-8 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg flex items-center justify-center gap-2"
            >
              <Icon name="ri:send-plane-line" class="w-5 h-5" />
              Send Message
            </button>
          </div>
        </form>

        <!-- Direct Contact -->
        <div class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-700">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4 text-center">Direct Contact</h3>
          <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
            <a 
              href="mailto:ogata.1225.koroku@gmail.com"
              class="flex items-center gap-2 text-blue-600 dark:text-yellow-400 hover:underline transition-colors duration-200"
            >
              <Icon name="ri:mail-line" class="w-5 h-5" />
              ogata.1225.koroku@gmail.com
            </a>
            <a 
              href="https://github.com/ogatakatsuya"
              target="_blank"
              rel="noopener noreferrer"
              class="flex items-center gap-2 text-blue-600 dark:text-yellow-400 hover:underline transition-colors duration-200"
            >
              <Icon name="ri:github-line" class="w-5 h-5" />
              GitHub
            </a>
          </div>
        </div>
      </div>

      <!-- Success and Error Messages -->
      <div id="message-container" class="mt-6 hidden">
        <div id="success-message" class="bg-green-100 dark:bg-green-900 border border-green-400 dark:border-green-600 text-green-700 dark:text-green-300 px-4 py-3 rounded-lg hidden">
          <div class="flex items-center gap-2">
            <Icon name="ri:check-line" class="w-5 h-5" />
            <span>Thank you for your message! I'll get back to you soon.</span>
          </div>
        </div>
        <div id="error-message" class="bg-red-100 dark:bg-red-900 border border-red-400 dark:border-red-600 text-red-700 dark:text-red-300 px-4 py-3 rounded-lg hidden">
          <div class="flex items-center gap-2">
            <Icon name="ri:error-warning-line" class="w-5 h-5" />
            <span id="error-text">An error occurred. Please try again.</span>
          </div>
        </div>
      </div>
    </div>
  </main>

  <script>
    // Form submission handling
    document.getElementById('contact-form')?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const form = e.target as HTMLFormElement;
      const formData = new FormData(form);
      const button = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      const messageContainer = document.getElementById('message-container');
      const successMessage = document.getElementById('success-message');
      const errorMessage = document.getElementById('error-message');
      const errorText = document.getElementById('error-text');
      
      // Disable button
      if (button) {
        button.disabled = true;
        button.textContent = 'Sending...';
      }
      
      // Reset messages
      messageContainer?.classList.add('hidden');
      successMessage?.classList.add('hidden');
      errorMessage?.classList.add('hidden');
      
      try {
        const response = await fetch('/contact', {
          method: 'POST',
          body: formData
        });
        
        if (response.ok) {
          // Success
          form.reset();
          messageContainer?.classList.remove('hidden');
          successMessage?.classList.remove('hidden');
        } else {
          // Error
          const errorMsg = await response.text();
          if (errorText) errorText.textContent = errorMsg;
          messageContainer?.classList.remove('hidden');
          errorMessage?.classList.remove('hidden');
        }
      } catch (error) {
        // Network error
        if (errorText) errorText.textContent = 'A network error occurred.';
        messageContainer?.classList.remove('hidden');
        errorMessage?.classList.remove('hidden');
      } finally {
        // Restore button
        if (button) {
          button.disabled = false;
          button.innerHTML = '<svg class="w-5 h-5"><use href="#ri:send-plane-line"></use></svg>Send Message';
        }
      }
    });
  </script>
</Layout>