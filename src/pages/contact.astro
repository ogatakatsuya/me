---
export const prerender = false;

import Layout from "@/layouts/BaseLayout.astro";
import Title from "@/components/page/Title.astro";
import ContactForm from "@/components/ui/ContactForm";
import { contactFormSchema } from "@/lib/schemas";
import { SQSClient, SendMessageCommand } from "@aws-sdk/client-sqs";

if (Astro.request.method === "POST") {
	try {
		const formData = await Astro.request.formData();
		const data = {
			name: formData.get("name")?.toString(),
			email: formData.get("email")?.toString(),
			subject: formData.get("subject")?.toString(),
			message: formData.get("message")?.toString(),
		};

		// Zod validation
		const validationResult = contactFormSchema.safeParse(data);

		if (!validationResult.success) {
			const errors = validationResult.error.errors;
			const errorMessage = errors
				.map((err: { message: string }) => err.message)
				.join(", ");
			return new Response(errorMessage, { status: 400 });
		}

		const validatedData = validationResult.data;

		const formattedMessage = `
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔔 New Contact Form Submission
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

👤 Sender Information:
   Name: ${validatedData.name}
   Email: ${validatedData.email}

📧 Message Details:
   Subject: ${validatedData.subject}

📝 Message:
${validatedData.message}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Timestamp: ${new Date().toLocaleString("ja-JP", { timeZone: "Asia/Tokyo" })}
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    `.trim();

		const sqsMessage = {
			subject: validatedData.subject,
			body: formattedMessage,
		};

		const { env } = Astro.locals.runtime;

		const client = new SQSClient({
			region: "ap-northeast-1",
			credentials: {
				accessKeyId: env.SECRET_AWS_ACCESS_KEY,
				secretAccessKey: env.SECRET_AWS_SECRET_KEY,
			},
		});
		const params = {
			QueueUrl: env.SECRET_SQS_QUEUE_URL,
			MessageBody: JSON.stringify(sqsMessage),
		};
		const command = new SendMessageCommand(params);
		await client.send(command);

		// Success response
		return new Response(
			"Thank you for your message. I'll get back to you soon!",
			{ status: 200 },
		);
	} catch (error) {
		console.error("Form submission error:", error);
		return new Response("An error occurred while sending", { status: 500 });
	}
}
---

<Layout
  title="Contact | Ogata Katsuya's Portfolio"
  description="Contact page - Get in touch with Ogata Katsuya"
  pagefind={true}
  og={{
    enabled: true,
    image: new URL("/og-image.png", Astro.url),
  }}
  type="website"
>
  <Title title="Contact" />

  <div class="text-center mb-8">
    <p class="text-lg px-2 md:text-xl text-gray-600 dark:text-gray-300">
      I'd love to hear from you! <br>
      Feel free to reach out using the form below.
    </p>
  </div>
  
  <main class="flex-1 flex justify-center items-center px-6 pb-16">
    <div class="w-full max-w-2xl">
      <ContactForm client:load />
    </div>
  </main>
</Layout>